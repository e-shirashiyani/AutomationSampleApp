name: Build and Upload to TestFlight

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Ruby environment
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true

      # Step 3: Install dependencies (Fastlane, CocoaPods, etc.)
      - name: Install dependencies
        run: |
          gem install bundler:2.5.21
          bundle install --jobs 4 --retry 3

      # Step 4: Clean Derived Data
      - name: Clean Derived Data
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData

      # Step 5: Unlock the Keychain (to avoid permission popups during code signing)
      - name: Unlock the Keychain
        run: |
          security create-keychain -p "password" build.keychain
          security unlock-keychain -p "password" build.keychain
          security set-keychain-settings build.keychain
          security list-keychains -s build.keychain

      # Step 6: Fetch certificates and provisioning profiles using Fastlane Match
      - name: Fetch certificates and provisioning profiles using Fastlane Match
        run: bundle exec fastlane match appstore --readonly
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}

      # Step 7: Build the App
      - name: Build the App
        run: bundle exec fastlane build_app_only
        env:
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
          FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

      # Step 8: Upload to TestFlight
      - name: Upload to TestFlight
        run: bundle exec fastlane upload_to_testflight_custom
        env:
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
          FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

      # Step 9: Upload Xcode Logs (successful or failed)
      - name: Upload Xcode Logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: build-logs
          path: ~/Library/Logs/gym/*.log
